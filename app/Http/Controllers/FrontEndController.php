<?php

namespace App\Http\Controllers;

use App\Agency;
use App\AirportTransfer;
use App\Booking;
use App\BookingTransfer;
use App\ExtraTransfer;
use App\HotelMaster;
use App\Meal;
use App\TTCharges;
use Carbon\Carbon;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Redirect;

session_start();

class FrontEndController extends Controller
{
    public function home()
    {
        if (isset($_SESSION['web_master'])) {
            $user_ses = $_SESSION['web_master'];
            $user = Agency::find($user_ses->id);
            return view('web.web_home');/*->with(['user' => $user])*/

        } else {
            $_SESSION['web_master'] = null;
            return view('web.web_home');
        }

//        parent::__call($method, $parameters); // TODO: Change the autogenerated stub
    }

    public function qtn()
    {
//        session_start();
//        $user = $_SESSION['web_master'];
        if (isset($_SESSION['web_master'])) {
            $user_ses = $_SESSION['web_master'];
            $user = Agency::find($user_ses->id);
            $hotels = HotelMaster::where(['is_active' => 1])->get();
            $meal = Meal::where(['is_active' => 1])->first();
            $tourtrans = TTCharges::where(['is_active' => 1])->get();
            $airtourtrans = AirportTransfer::where(['is_active' => 1])->first();
            $extratourtrans = ExtraTransfer::where(['is_active' => 1])->first();
            return view('web.quotation')->with(['user' => $user, 'hotels' => $hotels, 'meal' => $meal, 'tourtrans' => $tourtrans, 'airtourtrans' => $airtourtrans, 'extratourtrans' => $extratourtrans]);
        } else {
            return redirect('/');
//            $user_ses = $_SESSION['web_master'];
//            return view('web.quotation')->with([$_SESSION['user_master'] => null]);
        }
    }

    public function agent()
    {
        return view('web.agent_history');
    }

    public function agency_register(Request $request)
    {
        $reg = new Agency();
        $reg->agency_name = request('agency_name');
        $reg->agent_name = request('agent_name');
        $reg->mobile = request('mobile');
        $reg->email = request('email');
        $reg->password = md5(request('password'));
        $reg->save();
    }

    public function login(Request $request)
    {
        $username = request('email');
        $password = request('password');
        $user = Agency::where(['is_active' => 1, 'email' => $username, 'password' => md5($password)])->first();
//        echo json_encode($request->input('password'));
        if ($user != null) {
            $_SESSION['web_master'] = $user;
//            echo json_encode($_SESSION['web_master']);
            return redirect('/')->with(['user' => $user]);
//            return redirect('profile/' . str_slug($timeline->fname . " " . $timeline->lname));
        } else
            return Redirect::back()->withInput()->withErrors(array('message' => 'UserName or password Invalid'));
    }

    public function postQtn(Request $request)
    {
        $user = $_SESSION['web_master'];
        $booking = new Booking();
        $booking->agencyid = $user->id;
        $booking->guestname = request('guest_name');
        $booking->arr_flight = request('arr_flight');
        $booking->dept_flight = request('dept_flight');
        $booking->chkin = Carbon::parse(request('chkin'))->format('Y-m-d');
        $booking->chkout = Carbon::parse(request('chkout'))->format('Y-m-d');
        $booking->totaldays = request('totaldays');
        $booking->roomno = request('roomno');
        $booking->totaladults = request('totaladults');
        $booking->totalchilds = request('totalchilds');
        $booking->is_hotel = request('hotelid') != '' ? 1 : 0;/////////////
        $booking->hotelid = request('hotelid');
        $booking->is_tour = request('tour_type') != '' ? 1 : 0;////////
        $booking->tour_type = request('tour_type');
        $booking->total_lunch = request('meallunchcount');
        $booking->total_dinner = request('mealdinnercount');
        $booking->interhotel = request('interhotel');
        $booking->cruisetransfer = request('cruisetransfer');
        $booking->is_airport_transfer = request('airport_transfer_type') != '' ? 1 : 0;/////////
        $booking->airport_transfer_type = request('airport_transfer_type');
        $booking->hotel_total = request('hotel_total');
        $booking->is_meal = request('airport_transfer_type') != '' ? 1 : 0;
        $booking->meals_total = request('meals_total');
        $booking->tour_total = request('tour_total');
        $booking->grand_total = request('grand_total');
        $booking->gstperc = request('gstperc');
        $booking->gst_total = request('gst_total');
        $booking->net_total = request('net_total');
        $booking->save();

        $tids = explode(",", request('tour_ids'));
        $tdates = explode(",", request('tdates'));
        foreach (array_combine($tids, $tdates) as $tid => $tdate) {
            $booking_transfer = new BookingTransfer();
            $booking_transfer->bookingid = $booking->id;
            $booking_transfer->tourtransferid = $tid;
            $booking_transfer->tourdate = $tdate;
            $booking_transfer->save();
        }
    }

    protected function getHotelPrice()
    {
        $hotel = HotelMaster::find(request('hotelid'));
        $results = ['extra' => $hotel->extra_rent, 'child' => $hotel->child_price];
        return $results;
    }
}
